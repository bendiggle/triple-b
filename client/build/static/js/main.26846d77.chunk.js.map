{"version":3,"sources":["theme.js","components/Layout/Layout.js","components/Layout/index.js","pages/AddNewSelection/components/AddSelectionInfo.js","pages/AddNewSelection/components/AddBetInfo.js","pages/AddNewSelection/AddNewSelection.js","pages/Players/Players.js","pages/Reports/Reports.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["unit","multiplier","Icon","styled","FontAwesomeIcon","fontSize","color","useStyles","makeStyles","header","mainContent","navigation","position","bottom","left","right","zIndex","loadingSpinner","top","navItems","label","value","icon","faPlusCircle","faUsers","faChartPie","Layout","children","loading","error","history","useHistory","location","useLocation","classes","AppBar","className","Typography","variant","title","Container","style","marginTop","CircularProgress","BottomNavigation","pathname","onChange","e","push","map","item","BottomNavigationAction","showLabel","textInput","width","marginBottom","players","name","AddSelectionInfo","useState","blah","forEach","player","setDefaultDisplay","displayFields","setDisplayFields","selections","winningSelections","setDefaultValues","fieldValues","setFieldValues","console","log","setFieldValue","field","meow","Object","assign","display","flexDirection","key","alignItems","Switch","setDisplayField","target","checked","TextField","id","type","AddBetInfo","displaySingleSelectionField","setDisplaySingleSelectionField","totalBets","winningBets","playerCostWin","RadioGroup","Radio","sections","AddNewSelection","sectionNumber","setSectionNumber","Section","Button","float","onClick","length","GET_PLAYERS","gql","headers","Players","useQuery","data","rows","totalSelections","winPercentage","lostByOne","createRows","allUsers","Table","TableHead","TableRow","TableCell","TableBody","ListIcon","ListItemIcon","justifyContent","reportItems","text","faTrophy","toPath","faMedal","faUser","faUserFriends","faThumbsDown","Reports","List","component","ListItem","button","props","to","ListItemText","primary","faChevronRight","Routes","path","exact","client","ApolloClient","uri","App","theme","createMuiTheme","palette","main","secondary","background","default","contrastThreshold","tonalOffset","ThemeProvider","CssBaseline","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kcAAaA,EAAO,SAAAC,GAAU,gBAAoB,EAAbA,EAAP,O,kBCcxBC,EAAOC,YAAOC,IAAPD,CAAwB,CACnCE,SAAU,OACVC,MAAO,UAGHC,EAAYC,YAAW,CAC3BC,OAAQ,GAGRC,YAAa,GAGbC,WAAY,CACVC,SAAU,QACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,KAEVC,eAAgB,CACdL,SAAU,WACVM,IAAK,mBACLJ,KAAM,sBAIJK,EAAW,CACf,CAAEC,MAAO,iBAAkBC,MAAO,sBAAuBC,KAAM,kBAACpB,EAAD,CAAMoB,KAAMC,OAC3E,CAAEH,MAAO,UAAWC,MAAO,WAAYC,KAAM,kBAACpB,EAAD,CAAMoB,KAAME,OACzD,CAAEJ,MAAO,UAAWC,MAAO,WAAYC,KAAM,kBAACpB,EAAD,CAAMoB,KAAMG,QCzC5CC,ED4CA,SAAC,GAA0C,IAAxCjB,EAAuC,EAAvCA,OAAQkB,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACrCC,EAAUC,cACVC,EAAWC,cACXC,EAAU3B,IAMhB,OACE,6BACE,kBAAC4B,EAAA,EAAD,CAAQC,UAAWF,EAAQzB,OAAQG,SAAS,UAC1C,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWF,EAAQK,OAA5C,aAEF,kBAACC,EAAA,EAAD,CAAWJ,UAAWF,EAAQxB,aAC5B,wBAAI+B,MAAO,CAAEC,UAAW,IAAMjC,GAV9BmB,EAAgB,kBAACe,EAAA,EAAD,CAAkBP,UAAWF,EAAQjB,eAAgBX,MAAM,cAC3EuB,EAAc,sCACXF,GAWL,6BACE,kBAACiB,EAAA,EAAD,CACEvB,MAAOW,EAASa,SAChBT,UAAWF,EAAQvB,WACnBmC,SAAU,SAACC,EAAG1B,GAAJ,OAAcS,EAAQkB,KAAK3B,KAEpCF,EAAS8B,KAAI,SAAAC,GAAI,OAChB,kBAACC,EAAA,EAAD,CACE/B,MAAO8B,EAAK9B,MACZC,MAAO6B,EAAK7B,MACZC,KAAM4B,EAAK5B,KACX8B,WAAW,W,kBEtEnB7C,EAAYC,YAAW,CAC3B6C,UAAW,CACTC,MAAO,OACPC,aAAcvD,EAAK,MAIjBwD,EAAU,CAAC,CACfC,KAAM,MACL,CACDA,KAAM,MACL,CACDA,KAAM,MACL,CACDA,KAAM,OAyFOC,EAnEU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SACpBZ,EAAU3B,IADyB,EAECoD,mBArBlB,SAAAH,GACxB,IAAMI,EAAO,GAIb,OAHAJ,EAAQK,SAAQ,SAAAC,GACdF,EAAKE,EAAOL,OAAQ,KAEfG,EAgB4CG,CAAkBP,IAF5B,mBAElCQ,EAFkC,KAEnBC,EAFmB,OAGHN,mBAdf,SAAAH,GACvB,IAAMI,EAAO,GAOb,OANAJ,EAAQK,SAAQ,SAAAC,GACdF,EAAKE,EAAOL,MAAQ,CAClBS,WAAY,GACZC,kBAAmB,OAGhBP,EAMwCQ,CAAiBZ,IAHvB,mBAGlCa,EAHkC,KAGrBC,EAHqB,KAKzCC,QAAQC,IAAIR,GAEZ,IAMMS,EAAgB,SAACX,EAAQY,EAAOrD,GACpC,IAAMsD,EAAOC,OAAOC,OAAO,GAAIR,GAC/BM,EAAKb,GAAQY,GAASrD,EACtBiD,EAAeK,GACf7B,EAAS6B,EAAKb,GAASA,IAKzB,OAFAS,QAAQC,IAAI,SAAUH,GAGpB,yBAAK5B,MAAO,CAAEqC,QAAS,OAAQC,cAAe,WAC3CvB,EAAQP,KAAI,SAAAa,GAAM,OACjB,yBACEkB,IAAKlB,EAAOL,KACZhB,MAAO,CAAEqC,QAAS,OAAQC,cAAe,WAEzC,yBAAKtC,MAAO,CAAEqC,QAAS,OAAQC,cAAe,MAAOE,WAAY,WAC/D,2BAAInB,EAAOL,MACX,kBAACyB,EAAA,EAAD,CAAQpC,SAAU,SAAAC,GAAC,OAxBL,SAACe,EAAQgB,GAC/B,IAAMH,EAAOC,OAAOC,OAAO,GAAIb,GAC/BW,EAAKb,GAAUgB,EACfb,EAAiBU,GAqBcQ,CAAgBrB,EAAOL,KAAMV,EAAEqC,OAAOC,aAE/D,yBAAK5C,MAAO,CAAEc,aAAcvD,EAAK,KAC9BgE,EAAcF,EAAOL,OACpB,oCACE,kBAAC6B,EAAA,EAAD,CACElD,UAAWF,EAAQmB,UACnBkC,GAAE,UAAKzB,EAAOL,KAAZ,oBACFA,KAAI,UAAKK,EAAOL,KAAZ,oBACJrC,MAAK,mBACLoE,KAAK,SACL1C,SAAU,SAAAC,GACRwB,QAAQC,IAAIzB,EAAEqC,OAAO/D,OACrBoD,EAAcX,EAAOL,KAAM,aAAcV,EAAEqC,OAAO/D,UAGtD,kBAACiE,EAAA,EAAD,CACElD,UAAWF,EAAQmB,UACnBkC,GAAE,UAAKzB,EAAOL,KAAZ,sBACFA,KAAI,UAAKK,EAAOL,KAAZ,sBACJrC,MAAK,2BACLoE,KAAK,SACL1C,SAAU,SAAAC,GACRwB,QAAQC,IAAIzB,EAAEqC,OAAO/D,OACrBoD,EAAcX,EAAOL,KAAM,oBAAqBV,EAAEqC,OAAO/D,kB,kBC7FvEmC,EAAU,CAAC,CACfC,KAAM,MACL,CACDA,KAAM,MACL,CACDA,KAAM,MACL,CACDA,KAAM,OAyEOgC,EAhEI,SAAC,GAAkB,IAAhB3C,EAAe,EAAfA,SAAe,EACmCa,oBAAS,GAD5C,mBAC5B+B,EAD4B,KACCC,EADD,OAEGhC,mBARH,CACnCiC,UAAW,GACXC,YAAa,GACbC,cAAe,KAGoB,mBAE5BzB,EAF4B,KAEfC,EAFe,KAI7BG,EAAgB,SAACC,EAAOrD,GAC5B,IAAMsD,EAAOC,OAAOC,OAAO,GAAIR,GAC/BM,EAAKD,GAASrD,EACdiD,EAAeK,GACf7B,EAAS6B,IAKX,OAFAJ,QAAQC,IAAIH,GAGV,yBAAK5B,MAAO,CAAEqC,QAAS,OAAQC,cAAe,WAC5C,kBAACO,EAAA,EAAD,CACEC,GAAG,YACH9B,KAAK,YACLrC,MAAM,mBACNoE,KAAK,SACL1C,SAAU,SAAAC,GAAC,OAAI0B,EAAc,YAAa1B,EAAEqC,OAAO/D,QACnDoB,MAAO,CAAEa,MAAO,UAElB,kBAACgC,EAAA,EAAD,CACEC,GAAG,cACH9B,KAAK,cACLrC,MAAM,qBACNoE,KAAK,SACL1C,SAAU,SAAAC,GAAC,OAAI0B,EAAc,cAAe1B,EAAEqC,OAAO/D,QACrDoB,MAAO,CAAEa,MAAO,UAElB,yBAAKb,MAAO,CAAEqC,QAAS,OAAQC,cAAe,MAAOE,WAAY,WAC/D,yDACA,kBAACC,EAAA,EAAD,CAAQpC,SAAU,SAAAC,GACZA,EAAEqC,OAAOC,SAEXZ,EAAc,gBAAiB,IAFXkB,EAA+B5C,EAAEqC,OAAOC,aAOjEK,GACC,kBAACK,EAAA,EAAD,KACGvC,EAAQP,KAAI,SAAAa,GAAM,OACjB,yBACEkB,IAAKlB,EAAOL,KACZhB,MAAO,CAAEqC,QAAS,OAAQC,cAAe,MAAOE,WAAY,WAE5D,2BAAInB,EAAOL,MACX,kBAACuC,EAAA,EAAD,CACElD,SAAU,SAAAC,GACJA,EAAEqC,OAAOC,QAASZ,EAAc,gBAAiBX,EAAOL,MACvDgB,EAAc,gBAAiB,KAEtCY,QAAShB,EAAYyB,gBAAkBhC,EAAOL,cC3DxDD,GAJYhD,YAAW,IAIb,CAAC,CACfiD,KAAM,MACL,CACDA,KAAM,MACL,CACDA,KAAM,MACL,CACDA,KAAM,QAmBFwC,EAAW,CACf,gBAAGnD,EAAH,EAAGA,SAAH,OAAkB,kBAAC,EAAD,CAAkBA,SAAUA,KAC9C,gBAAGA,EAAH,EAAGA,SAAH,OAAiB,kBAAC,EAAD,CAAYA,SAAUA,MAwE1BoD,EAnDS,WAAO,IAAD,EACUvC,oBAAS,GADnB,gCAEcA,mBAAS,IAFvB,mBAErBwC,EAFqB,KAENC,EAFM,OAGUzC,mBA1Cf,SAAAH,GACvB,IAAMI,EAAO,CACXgC,UAAW,GACXC,YAAa,GACbC,cAAe,IAQjB,OANAtC,EAAQK,SAAQ,SAAAC,GACdF,EAAKE,EAAOL,MAAQ,CAClBS,WAAY,GACZC,kBAAmB,OAGhBP,EA8BwCQ,CAAiBZ,IAHpC,mBAGrBa,EAHqB,KAGRC,EAHQ,KAItB+B,EAAUJ,EAASE,GAWzB,OADA5B,QAAQC,IAAI,mBAAoBH,GAE9B,kBAAC,EAAD,CAAQ5D,OAAO,WACb,kBAAC4F,EAAD,CAASvD,SAZA,SAACzB,EAAOqD,GACnBH,QAAQC,IAAI,eAAgBnD,EAAOqD,GACnC,IAAMd,EAAOgB,OAAOC,OAAO,GAAIR,GAC/BT,EAAKc,GAASrD,EACdiD,EAAeV,MASb,6BACGuC,EAAgB,GACf,kBAACG,EAAA,EAAD,CACEhG,MAAM,YACNmC,MAAO,CAAE8D,MAAO,QAChBC,QAAS,kBAAMJ,EAAiBD,EAAgB,KAHlD,YAQDA,EAAgBF,EAASQ,OAAS,EACjC,kBAACH,EAAA,EAAD,CACEhG,MAAM,UACNmC,MAAO,CAAE8D,MAAO,SAChBC,QAAS,kBAAMJ,EAAiBD,EAAgB,KAHlD,QAQA,kBAACG,EAAA,EAAD,CACE7D,MAAO,CAAE8D,MAAO,SAChBjG,MAAM,UACNkF,KAAK,SACLgB,QAAS,WA7BjBjC,QAAQC,IAAI,YAyBN,a,4MC1FV,IAAMkC,GAAcC,YAAH,MAQXC,GAAU,CACd,SACA,aACA,QACA,YAqCaC,GA3BC,WAAO,IAAD,EACaC,YAASJ,IAAlCK,EADY,EACZA,KAAMnF,EADM,EACNA,QAASC,EADH,EACGA,MACnBmF,EAAO,GAEX,OADID,IAAMC,EAVO,SAAAxD,GAAO,OAAIA,EAAQP,KAAI,SAAAa,GAAM,MAAK,CACnDL,KAAMK,EAAOL,KACbwD,gBAAiB,GACjBC,cAAe,GACfC,UAAW,MAMMC,CAAWL,EAAKM,WAE/B,kBAAC,EAAD,CAAQ5G,OAAO,UAAUmB,QAASA,EAASC,MAAOA,GAChD,kBAACyF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGZ,GAAQ3D,KAAI,SAAAxC,GAAM,OAAI,kBAACgH,EAAA,EAAD,CAAWzC,IAAKvE,GAASA,QAGpD,kBAACiH,EAAA,EAAD,KACGV,EAAK/D,KAAI,SAAA8D,GAAI,OACZ,kBAACS,GAAA,EAAD,CAAUxC,IAAK+B,EAAKtD,MAClB,kBAACgE,EAAA,EAAD,KAAYV,EAAKtD,MACjB,kBAACgE,EAAA,EAAD,KAAYV,EAAKE,iBACjB,kBAACQ,EAAA,EAAD,KAAYV,EAAKG,eACjB,kBAACO,EAAA,EAAD,KAAYV,EAAKI,mB,iKClCzBQ,GAAWxH,YAAOyH,KAAPzH,CAAqB,CACpC2E,QAAS,OACT+C,eAAgB,aAGZC,GAAc,CAClB,CACEC,KAAM,iBACNzG,KAAM,kBAAC,IAAD,CAAiBA,KAAM0G,OAC7BC,OAAQ,2BAEV,CACEF,KAAM,qBACNzG,KAAM,kBAAC,IAAD,CAAiBA,KAAM4G,aAC7BD,OAAQ,+BAEV,CACEF,KAAM,kBACNzG,KAAM,kBAAC,IAAD,CAAiBA,KAAM6G,OAC7BF,OAAQ,4BAEV,CACEF,KAAM,YACNzG,KAAM,kBAAC,IAAD,CAAiBA,KAAM8G,OAC7BH,OAAQ,sBAEV,CACEF,KAAM,mBACNzG,KAAM,kBAAC,IAAD,CAAiBA,KAAM+G,OAC7BJ,OAAQ,yBAoBGK,GAhBC,WACd,OACE,kBAAC,EAAD,CAAQ7H,OAAO,WACb,kBAAC8H,GAAA,EAAD,CAAMC,UAAU,OACbV,GAAY7E,KAAI,SAAAC,GAAI,OACnB,kBAACuF,GAAA,EAAD,CAAUC,QAAM,EAACF,UAAW,SAAAG,GAAK,OAAI,kBAAC,KAAD,eAAMC,GAAI1F,EAAK+E,QAAYU,MAC9D,kBAACf,GAAA,EAAD,KAAe1E,EAAK5B,MACpB,kBAACuH,GAAA,EAAD,CAAcC,QAAS5F,EAAK6E,OAC5B,kBAACJ,GAAD,KAAU,kBAAC,IAAD,CAAiBrG,KAAMyH,eC3C9BC,GAVA,kBACb,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,sBAAsBT,UAAWtC,EAAiBgD,OAAK,IACnE,kBAAC,IAAD,CAAOD,KAAK,WAAWT,UAAW3B,GAASqC,OAAK,IAChD,kBAAC,IAAD,CAAOD,KAAK,WAAWT,UAAWF,GAASY,OAAK,OCEhDC,GAAS,IAAIC,IAAa,CAC9BC,IAAK,kCA8BQC,GA3BH,WACV,IAAMC,EAAQC,YAAe,CACvBC,QAAS,CACPjE,KAAM,OACNsD,QAAS,CACPY,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,WAEXC,kBAAmB,EACnBC,YAAa,MAGrB,OACE,kBAAC,IAAD,CAAgBZ,OAAQA,IACtB,kBAACa,EAAA,EAAD,CAAeT,MAAOA,GACpB,kBAACU,EAAA,EAAD,MACA,kBAAC,GAAD,SCxBYC,QACW,cAA7BC,OAAOnI,SAASoI,UAEe,UAA7BD,OAAOnI,SAASoI,UAEhBD,OAAOnI,SAASoI,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.26846d77.chunk.js","sourcesContent":["export const unit = multiplier => `${multiplier * 7}px`;\nexport const primaryColor = '#6200EE';\nexport const darkPrimaryColor = '#3700B3';\nexport const secondaryColor = '#03DAC5';\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { AppBar, Typography, Switch, Grid, Paper } from '@material-ui/core';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport faChartPie from '@fortawesome/fontawesome-free-solid/faChartPie';\nimport faPlusCircle from '@fortawesome/fontawesome-free-solid/faPlusCircle';\nimport faUsers from '@fortawesome/fontawesome-free-solid/faUsers';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { unit, primaryColor } from '../../theme';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Icon = styled(FontAwesomeIcon)({\n  fontSize: '24px',\n  color: 'white'\n});\n\nconst useStyles = makeStyles({\n  header: {\n    // flex: '0 1 auto'\n  },\n  mainContent: {\n    // flex: '1 0 auto'\n  },\n  navigation: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000\n  },\n  loadingSpinner: {\n    position: 'absolute',\n    top: 'calc(50% - 20px)',\n    left: 'calc(50% - 20px)'\n  }\n});\n\nconst navItems = [\n  { label: 'Add Selections', value: '/add-new-selections', icon: <Icon icon={faPlusCircle} />},\n  { label: 'Players', value: '/players', icon: <Icon icon={faUsers} />},\n  { label: 'Reports', value: '/reports', icon: <Icon icon={faChartPie} />},\n];\n\nconst Layout = ({ header, children, loading, error }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const classes = useStyles();\n  const renderChildren = () => {\n    if (loading) return <CircularProgress className={classes.loadingSpinner} color=\"secondary\" />;\n    if (error) return <div>Error</div>;\n    return children;\n  };\n  return (\n    <div>\n      <AppBar className={classes.header} position=\"static\">\n        <Typography variant=\"h1\" className={classes.title}>Triple-B</Typography>\n      </AppBar>\n      <Container className={classes.mainContent}>\n        <h1 style={{ marginTop: 0 }}>{header}</h1>\n        {renderChildren()}\n      </Container>\n      <div>\n        <BottomNavigation\n          value={location.pathname}\n          className={classes.navigation}\n          onChange={(e, value) => history.push(value)}\n        >\n          {navItems.map(item => (\n            <BottomNavigationAction\n              label={item.label}\n              value={item.value}\n              icon={item.icon}\n              showLabel={false}\n            />\n          ))}\n        </BottomNavigation>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport { TextField, Switch } from '@material-ui/core';\nimport {unit} from \"../../../theme\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  textInput: {\n    width: '100%',\n    marginBottom: unit(1)\n  }\n});\n\nconst players = [{\n  name: 'BD'\n}, {\n  name: 'SF'\n}, {\n  name: 'LA'\n}, {\n  name: 'JM'\n}];\n\nconst setDefaultDisplay = players => {\n  const blah = {};\n  players.forEach(player => {\n    blah[player.name] = false\n  });\n  return blah;\n};\n\nconst setDefaultValues = players => {\n  const blah = {};\n  players.forEach(player => {\n    blah[player.name] = {\n      selections: '',\n      winningSelections: ''\n    }\n  });\n  return blah;\n};\n\nconst AddSelectionInfo = ({ onChange }) => {\n  const classes = useStyles();\n  const [displayFields, setDisplayFields] = useState(setDefaultDisplay(players));\n  const [fieldValues, setFieldValues] = useState(setDefaultValues(players));\n\n  console.log(displayFields);\n\n  const setDisplayField = (player, display) => {\n    const meow = Object.assign({}, displayFields);\n    meow[player] = display;\n    setDisplayFields(meow);\n  };\n\n  const setFieldValue = (player, field, value) => {\n    const meow = Object.assign({}, fieldValues);\n    meow[player][field] = value;\n    setFieldValues(meow);\n    onChange(meow[player], player);\n  };\n\n  console.log('values', fieldValues);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      {players.map(player => (\n        <div\n          key={player.name}\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n            <p>{player.name}</p>\n            <Switch onChange={e => setDisplayField(player.name, e.target.checked)}/>\n          </div>\n          <div style={{ marginBottom: unit(2) }}>\n            {displayFields[player.name] && (\n              <>\n                <TextField\n                  className={classes.textInput}\n                  id={`${player.name}-totalSelections`}\n                  name={`${player.name}-totalSelections`}\n                  label={`Enter selections`}\n                  type=\"number\"\n                  onChange={e => {\n                    console.log(e.target.value);\n                    setFieldValue(player.name, 'selections', e.target.value);\n                  }}\n                />\n                <TextField\n                  className={classes.textInput}\n                  id={`${player.name}-winningSelections`}\n                  name={`${player.name}-winningSelections`}\n                  label={`Enter winning selections`}\n                  type=\"number\"\n                  onChange={e => {\n                    console.log(e.target.value);\n                    setFieldValue(player.name, 'winningSelections', e.target.value);\n                  }}\n                />\n              </>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AddSelectionInfo;","import React, { useState } from 'react';\nimport { Switch, TextField, RadioGroup, Radio } from \"@material-ui/core\";\n\nconst players = [{\n  name: 'BD'\n}, {\n  name: 'SF'\n}, {\n  name: 'LA'\n}, {\n  name: 'JM'\n}];\n\nconst setDefaultFieldValues = () => ({\n  totalBets: '',\n  winningBets: '',\n  playerCostWin: ''\n});\n\nconst AddBetInfo = ({ onChange }) => {\n  const [displaySingleSelectionField, setDisplaySingleSelectionField] = useState(false);\n  const [fieldValues, setFieldValues] = useState(setDefaultFieldValues());\n\n  const setFieldValue = (field, value) => {\n    const meow = Object.assign({}, fieldValues);\n    meow[field] = value;\n    setFieldValues(meow);\n    onChange(meow);\n  };\n\n  console.log(fieldValues);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <TextField\n        id=\"totalBets\"\n        name=\"totalBets\"\n        label=\"Enter total bets\"\n        type=\"number\"\n        onChange={e => setFieldValue('totalBets', e.target.value)}\n        style={{ width: '100%' }}\n      />\n      <TextField\n        id=\"winningBets\"\n        name=\"winningBets\"\n        label=\"Enter winning bets\"\n        type=\"number\"\n        onChange={e => setFieldValue('winningBets', e.target.value)}\n        style={{ width: '100%' }}\n      />\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n        <p>Single selection cost win?</p>\n        <Switch onChange={e => {\n          if (e.target.checked) setDisplaySingleSelectionField(e.target.checked);\n          else {\n            setFieldValue('playerCostWin', '');\n            setDisplaySingleSelectionField(e.target.checked)\n          }\n        }}/>\n      </div>\n      {displaySingleSelectionField && (\n        <RadioGroup>\n          {players.map(player => (\n            <div\n              key={player.name}\n              style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\n            >\n              <p>{player.name}</p>\n              <Radio\n                onChange={e => {\n                  if (e.target.checked) setFieldValue('playerCostWin', player.name);\n                  else setFieldValue('playerCostWin', '')\n                }}\n                checked={fieldValues.playerCostWin === player.name}\n              />\n            </div>\n          ))}\n        </RadioGroup>\n      )}\n    </div>\n  );\n};\n\nexport default AddBetInfo;\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport Layout from '../../components/Layout';\nimport AddSelectionInfo from './components/AddSelectionInfo';\nimport AddBetInfo from \"./components/AddBetInfo\";\n\n// LOOK AT HOW OTHER FORMS ARE ON MOBILE\n\nconst useStyles = makeStyles({\n\n});\n\nconst players = [{\n  name: 'BD'\n}, {\n  name: 'SF'\n}, {\n  name: 'LA'\n}, {\n  name: 'JM'\n}];\n\nconst setDefaultValues = players => {\n  const blah = {\n    totalBets: '',\n    winningBets: '',\n    playerCostWin: ''\n  };\n  players.forEach(player => {\n    blah[player.name] = {\n      selections: '',\n      winningSelections: ''\n    }\n  });\n  return blah;\n};\n\n\nconst sections = [\n  ({ onChange }) => <AddSelectionInfo onChange={onChange}/>,\n  ({ onChange })=> <AddBetInfo onChange={onChange}/>\n];\n\n// ENTER DATE -> DATEPICKER\n// BREADCRUMBS\n// YUP VALIDATION\n\n// SECTIONS = list players and add individually (some might have different selections)\n// ADD void bets (switch)\n// ADD if one bet cost win\n\n// POSSIBLE TO DO MU\n\n\n// Go to Add new Selections\n// 1. add date\n// 2. Displays date -> Add new bet\n// 3. Add bet name\n// 4. DONE - Add Selections and winning selections\n// 5. DONE - Add total bets and total winning bets ANd any slections cost winning bets ( list of all\n\nconst AddNewSelection = () => {\n  const [displayForm, setDisplayForm] = useState(false);\n  const [sectionNumber, setSectionNumber] = useState(0);\n  const [fieldValues, setFieldValues] = useState(setDefaultValues(players));\n  const Section = sections[sectionNumber];\n  const meow = (value, field) => {\n    console.log('value, field', value, field);\n    const blah = Object.assign({}, fieldValues);\n    blah[field] = value;\n    setFieldValues(blah);\n  };\n  const submitSelections = () => {\n    console.log('SUBMIT', );\n  };\n  console.log('selection Values', fieldValues);\n  return (\n    <Layout header=\"Add New\">\n      <Section onChange={meow}/>\n      <div>\n        {sectionNumber > 0 && (\n          <Button\n            color=\"secondary\"\n            style={{ float: 'left' }}\n            onClick={() => setSectionNumber(sectionNumber - 1)}\n          >\n            Previous\n          </Button>\n        )}\n        {sectionNumber < sections.length - 1 ? (\n          <Button\n            color=\"primary\"\n            style={{ float: 'right' }}\n            onClick={() => setSectionNumber(sectionNumber + 1)}\n          >\n            Next\n          </Button>\n        ) : (\n          <Button\n            style={{ float: 'right' }}\n            color=\"primary\"\n            type=\"submit\"\n            onClick={() => submitSelections()}\n          >\n            Submit\n          </Button>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default AddNewSelection;","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Layout from \"../../components/Layout\";\n\nconst GET_PLAYERS = gql`\n    query {\n        allUsers {\n            name\n        }\n    }\n`;\n\nconst headers = [\n  'Player',\n  'Selections',\n  'Win %',\n  'Let down'\n];\n\nconst createRows = players => players.map(player => ({\n  name: player.name,\n  totalSelections: 22,\n  winPercentage: 59,\n  lostByOne: 3\n}));\n\nconst Players = () => {\n  const { data, loading, error } = useQuery(GET_PLAYERS);\n  let rows = [];\n  if (data) rows = createRows(data.allUsers);\n  return (\n    <Layout header=\"Players\" loading={loading} error={error}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {headers.map(header => <TableCell key={header}>{header}</TableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(data => (\n            <TableRow key={data.name}>\n              <TableCell>{data.name}</TableCell>\n              <TableCell>{data.totalSelections}</TableCell>\n              <TableCell>{data.winPercentage}</TableCell>\n              <TableCell>{data.lostByOne}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Layout>\n  )\n};\n\nexport default Players;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport faTrophy from '@fortawesome/fontawesome-free-solid/faTrophy';\nimport { faMedal } from '@fortawesome/free-solid-svg-icons/faMedal';\nimport faUser from '@fortawesome/fontawesome-free-solid/faUser';\nimport faUserFriends from '@fortawesome/fontawesome-free-solid/faUserFriends';\nimport faThumbsDown from '@fortawesome/fontawesome-free-solid/faThumbsDown';\nimport faChevronRight from '@fortawesome/fontawesome-free-solid/faChevronRight';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Layout from '../../components/Layout';\n\nconst ListIcon = styled(ListItemIcon)({\n  display: 'flex',\n  justifyContent: 'flex-end'\n});\n\nconst reportItems = [\n  {\n    text: 'Win Percentage',\n    icon: <FontAwesomeIcon icon={faTrophy} />,\n    toPath: '/reports/win-percentage'\n  },\n  {\n    text: 'Perfect Selections',\n    icon: <FontAwesomeIcon icon={faMedal} />,\n    toPath: '/reports/perfect-selections'\n  },\n  {\n    text: 'Individual Form',\n    icon: <FontAwesomeIcon icon={faUser} />,\n    toPath: '/reports/individual-form'\n  },\n  {\n    text: 'Team Form',\n    icon: <FontAwesomeIcon icon={faUserFriends} />,\n    toPath: '/reports/team-form'\n  },\n  {\n    text: 'Bets lost by one',\n    icon: <FontAwesomeIcon icon={faThumbsDown} />,\n    toPath: '/reports/lost-by-one'\n  }\n];\n\nconst Reports = () => {\n  return (\n    <Layout header=\"Reports\">\n      <List component=\"nav\">\n        {reportItems.map(item => (\n          <ListItem button component={props => <Link to={item.toPath} {...props} />}>\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n            <ListIcon><FontAwesomeIcon icon={faChevronRight}/></ListIcon>\n          </ListItem>\n        ))}\n      </List>\n    </Layout>\n  );\n};\n\nexport default Reports;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { AddNewSelection, Players, Reports } from './pages';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/add-new-selections\" component={AddNewSelection} exact/>\n      <Route path=\"/players\" component={Players} exact/>\n      <Route path=\"/reports\" component={Reports} exact/>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;","import React from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { AddUser } from './pages';\nimport Routes from './routes';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n});\n\nconst App = () => {\n  const theme = createMuiTheme({\n        palette: {\n          type: 'dark',\n          primary: {\n            main: '#6200EE'\n          },\n          secondary: {\n            main: '#03DAC5'\n          },\n          background: {\n            default: '#121212'\n          },\n          contrastThreshold: 3,\n          tonalOffset: 0.2\n        }\n      });\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Routes/>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}